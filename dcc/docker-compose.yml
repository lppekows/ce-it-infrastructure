services:

  mariadb:
    init: true
    container_name: mariadb
    build:
      context: ligo-dcc/docker/mariadb
      args:
        MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
        MARIADB_DATABASE: ${MARIADB_DATABASE}
        MARIADB_USER: ${MARIADB_USER}
        MARIADB_PASSWORD: ${MARIADB_PASSWORD}
        MARIADB_USER2: ${MARIADB_USER2}
        MARIADB_PASSWORD2: ${MARIADB_PASSWORD2}
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_USER2: ${MARIADB_USER2}
      MARIADB_PASSWORD2: ${MARIADB_PASSWORD2}
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - 3306:3306

  dcc:
    init: true
    container_name: dcc
    build:
      context: ligo-dcc
      dockerfile: docker/Dockerfile
      args:
        MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
        MARIADB_DATABASE: ${MARIADB_DATABASE}
        MARIADB_USER: ${MARIADB_USER}
        MARIADB_PASSWORD: ${MARIADB_PASSWORD}
        MARIADB_USER2: ${MARIADB_USER2}
        MARIADB_PASSWORD2: ${MARIADB_PASSWORD2}
        FQDN: ${FQDN}
        PROVIDER_METADATA_URL: ${PROVIDER_METADATA_URL}
        CLIENT_ID: ${CLIENT_ID}
        CLIENT_SECRET: ${CLIENT_SECRET}
        REDIRECT_URI: ${REDIRECT_URI}
        CRYPTO_PASSPHRASE: ${CRYPTO_PASSPHRASE}
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_USER2: ${MARIADB_USER2}
      MARIADB_PASSWORD2: ${MARIADB_PASSWORD2}
      FQDN: ${FQDN}
      PROVIDER_METADATA_URL: ${PROVIDER_METADATA_URL}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      REDIRECT_URI: ${REDIRECT_URI}
      CRYPTO_PASSPHRASE: ${CRYPTO_PASSPHRASE}
    volumes:
      - letsencrypt:/etc/letsencrypt
      - dccdocs:/usr1/www/html
    ports:
      - 80:80
      - 443:443
    depends_on:
      - "mariadb"

  letsencrypt:
    init: true
    container_name: letsencrypt
    build:
      context: letsencrypt
      dockerfile: Dockerfile
    volumes:
      - letsencrypt:/etc/letsencrypt
      - dccdocs:/usr1/www/html

  restapi:
    init: true
    container_name: restapi
    build:
      context: rest-dcc
      dockerfile: docker/Dockerfile
      args:
        MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
        MARIADB_DATABASE: ${MARIADB_DATABASE}
        MARIADB_USER: ${MARIADB_USER}
        MARIADB_PASSWORD: ${MARIADB_PASSWORD}
        MARIADB_USER2: ${MARIADB_USER2}
        MARIADB_PASSWORD2: ${MARIADB_PASSWORD2}
        FQDN: ${FQDN}
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_USER2: ${MARIADB_USER2}
      MARIADB_PASSWORD2: ${MARIADB_PASSWORD2}
      FQDN: ${FQDN}
    volumes:
      - letsencrypt:/etc/letsencrypt
    ports:
      - 8000:8000
    depends_on:
      - "mariadb"

  mailhog:
    # fake smtp server to receive all email traffic and test notifications.
    init: true
    container_name: mailhog
    image: mailhog/mailhog
    command: ["-smtp-bind-addr", "0.0.0.0:25"]
    user: root
    expose:
      - 25
      - 8025
    ports:
      - 8025:8025
    healthcheck:
      test: echo | telnet 127.0.0.1 25
    depends_on:
      - "mariadb"
      - "dcc"

volumes:
  dbdata:
  dccdocs:
  letsencrypt:


